{"version":3,"sources":["components/App.js","components/Dropzone.js","components/pages/upload.js","components/router.js","redux/slices/filterSlice.js","redux/slices/resourcesSlice.js","redux/store.js","index.js"],"names":["App","_jsxs","className","children","_jsx","href","target","rel","Outlet","baseStyle","flex","display","flexDirection","alignItems","padding","width","transition","focusedStyle","boxShadow","acceptStyle","rejectStyle","backgroundColor","Dropzone","_ref","onChange","_useDropzone","useDropzone","accept","onDrop","getRootProps","getInputProps","isFocused","isDragAccept","isDragReject","style","useMemo","_objectSpread","thumbsContainer","flexWrap","marginTop","thumb","border","marginBottom","marginRight","height","img","Upload","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useState3","_useState4","result","setResult","useCallback","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","send_files","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","length","Error","console","log","fetch","concat","window","urls","api","method","body","sent","stop","_Fragment","alt","path","size","title","src","onLoad","revokeObjectURL","name","onClick","JSON","stringify","router","createHashRouter","element","pushReplaceSearchParams","new_searchParams","url","location","old_search_params_string","searchParams","toString","new_search_params_string","URLSearchParams","_toConsumableArray","Array","from","entries","filter","key","has","_ref3","value","String","sort","_ref5","_ref6","key_a","key_b","localeCompare","origin","pathname","history","pushState","filterSlice","createSlice","initialState","tags","selectedTags","queryText","latitude","longitude","reducers","setTags","state","action","payload","setSelectedTags","toggleTag","includes","tag","push","Boolean","join","setQueryText","setGeoLocation","clearGeoLocation","_filterSlice$actions","actions","resourcesSlice","resources","setResources","createAsyncThunk","thunkApi","_ref2","dispatch","getState","_getState","search_params_data","filtered_selectedTags","search_params","lat","lon","isArray","q","then","data","_x","_x2","apply","arguments","configureStore","reducer","filterReducer","resourcesReducer","isLocalhost","hostname","env","frontend","dev_domain","ReactDOM","render","React","StrictMode","ReduxProvider","store","RouterProvider","fallbackElement","document","getElementById"],"mappings":"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","file":"static/js/main.48355738.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nimport '../fonts/ubuntu-v15-latin/index.css'\nimport '../fonts/ubuntu-mono-v10-latin/index.css'\n\nimport {\n  Outlet,\n} from 'react-router-dom'\n\nexport default function App() {\n\n  return <div className={`app_wrapper`}>\n    <header>\n      <h1>ðŸ’¶ Money</h1>\n\n      <a href=\"https://github.com/thomasrosen/money\" target=\"_blank\" rel=\"noreferrer\">Sourcecode</a>\n    </header>\n\n    <main>\n      <div className=\"middle_box\">\n        <p><strong>A very simple tool to keep track of some of your spendings.</strong></p>\n\n        <p>The text recognition is handled on the server. But nothing is permanently stored there. All data is only on here in this browser on your computer. You can <strong>export and import</strong> the data to backup or move it to a different browser.</p>\n\n        <p>\n          The website is maintained by <a href=\"https://thomasrosen.me/\" target=\"_blank\" rel=\"noreferrer\">Thomas Rosen</a>. You can contact me at <a href=\"mailto:money@thomasrosen.me\">money@thomasrosen.me</a>.\n        </p>\n      </div>\n      <br />\n      <br />\n\n      <Outlet />\n    </main>\n\n  </div>\n}\n","import React, { useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  width: '100%',\n  transition: 'box-shadow .2s ease, background-color .2s ease',\n}\n\nconst focusedStyle = {\n  boxShadow: '0 0 0 5px var(--primary-color)',\n}\n\nconst acceptStyle = {\n  boxShadow: '0 0 0 5px var(--primary-color)',\n}\n\nconst rejectStyle = {\n  backgroundColor: 'var(--error-color)',\n  boxShadow: '0 0 0 5px var(--error-color)',\n}\n\n\nfunction Dropzone({ onChange }) {\n  const {\n    getRootProps,\n    getInputProps,\n    isFocused,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    // maxFiles: 10,\n    accept: {\n      'image/*': ['.jpeg', '.png']\n    },\n    onDrop: onChange,\n  })\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isFocused ? focusedStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isFocused,\n    isDragAccept,\n    isDragReject\n  ])\n\n  return (\n    <section className=\"container\">\n      <button className=\"primary\" {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        {\n          isDragReject\n          ? <strong>Only JPG and PNG images are allowed!</strong>\n          : <strong>Click or Drop an image here!</strong>\n        }\n      </button>\n    </section>\n  )\n}\n\nexport default Dropzone\n","import { useState, useCallback } from 'react'\nimport Dropzone from '../Dropzone.js'\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: '16px',\n}\n\nconst thumb = {\n  border: '1px solid #eaeaea',\n  marginBottom: '8px',\n  marginRight: '8px',\n  width: 'auto',\n  height: '100px',\n  padding: '4px',\n}\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n}\n\n// function file_to_image(file) {\n//   return new Promise((resolve, reject) => {\n//     const reader  = new FileReader()\n//     // it's onload event and you forgot (parameters)\n//     reader.onload = function(e)  {\n//         console.log('e.target.result', e.target.result)\n//         var image = document.createElement('img')\n//         // the result image data\n//         image.src = e.target.result\n//       document.body.appendChild(image)\n//       console.log('image', image)\n//         resolve()\n//      }\n//      reader.onerror = function(e) {\n//       reject()\n//      }\n//      // you have to declare the file loading\n//      reader.readAsDataURL(file)\n//   })\n//  }\n\nexport default function Upload() {\n\n  const [files, setFiles] = useState([])\n  const [result, setResult] = useState(null)\n\n  const onChange = useCallback(acceptedFiles => {\n    acceptedFiles = acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    }))\n\n    setFiles(acceptedFiles)\n  }, [])\n\n  const send_files = useCallback(async () => {\n    if (files.length === 0) {\n      throw new Error('No files selected')\n    }\n\n    const file = files[0]\n    console.log('file', file)\n\n    // const data_url = file_to_image(file)\n\n    // get image-blob-content from the file\n    // const imageResponse = await fetch(file.preview)\n    // const imageBlob = await imageResponse.blob()\n\n    // create a formdata object\n    // const formData = new FormData()\n    // formData.append('file', file)\n\n    // send the formdata to the server at /api/ocr using fetch\n    const response = await fetch(`${window.urls.api}ocr`, {\n      method: 'POST',\n      body: file, // formData\n    })\n    const json = await response.json()\n    setResult(json)\n\n\n    // setResult({\n    //   hello: 'world'\n    // })\n\n  }, [files])\n\n  return <div>\n    <div className=\"middle_box\">\n      <Dropzone onChange={onChange} />\n      <br />\n      {\n        files.length > 0\n        ? <>\n          <h4>Selected Images</h4>\n          <aside style={thumbsContainer}>\n          {\n            files\n              .map(file => (\n            <div style={thumb} key={file.name}>\n              <img\n                alt={`${file.path} - ${file.size} bytes`}\n                title={`${file.path} - ${file.size} bytes`}\n                src={file.preview}\n                style={img}\n                // Revoke data uri after image is loaded\n                onLoad={() => { URL.revokeObjectURL(file.preview) }}\n              />\n            </div>\n              ))\n          }\n          </aside>\n          <button onClick={send_files}>Send one file</button>\n        </>\n        : null\n      }\n      {\n        result !== null\n          ? <>\n            <br />\n            <br />\n            <pre><code>{JSON.stringify(result,null,2)}</code></pre>\n          </>\n          : null\n      }\n    </div>\n  </div>\n}\n","import {\n  createHashRouter,\n} from 'react-router-dom'\n\nimport App from './App.js'\nimport Upload from './pages/upload.js'\n\nexport const router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    children: [\n      {\n        path: '/',\n        element: <Upload />,\n      },\n      {\n        path: '*',\n        element: <Upload />,\n      },\n    ]\n  },\n]);\n","import { createSlice } from '@reduxjs/toolkit'\n\nfunction pushReplaceSearchParams(new_searchParams) {\n  let url = new URL(window.location)\n\n  const old_search_params_string = url.searchParams.toString()\n\n  const new_search_params_string = new URLSearchParams(\n    [\n      ...(\n        Array.from(url.searchParams.entries())\n          .filter(([key]) => !new_searchParams.has(key))\n      ),\n      ...(\n        [...new_searchParams.entries()]\n          .filter(([, value]) => String(value).length > 0)\n      ),\n    ]\n      .sort(([key_a], [key_b]) => key_a.localeCompare(key_b)) // sort alphabetically\n  ).toString()\n\n  if (old_search_params_string !== new_search_params_string) {\n    url = new URL(`${url.origin}${url.pathname}${new_search_params_string.length > 0 ? '?' + new_search_params_string : ''}`)\n    window.history.pushState({}, '', url)\n  }\n}\n\nexport const filterSlice = createSlice({\n  name: 'filter',\n  initialState: {\n    tags: [],\n    selectedTags: [],\n    queryText: '',\n    latitude: 0,\n    longitude: 0,\n  },\n  reducers: {\n    setTags: (state, action) => {\n      state.tags = action.payload\n    },\n    setSelectedTags: (state, action) => {\n      state.selectedTags = action.payload\n    },\n    toggleTag: (state, action) => {\n      if (state.selectedTags.includes(action.payload)) {\n        state.selectedTags = state.selectedTags.filter(tag => tag !== action.payload)\n      } else {\n        state.selectedTags.push(action.payload)\n      }\n\n      state.selectedTags = state.selectedTags.filter(Boolean)\n\n      if (state.selectedTags.length === 0) {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['tags', ''],\n        ]))\n      } else {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['tags', state.selectedTags.join(',')],\n        ]))\n      }\n    },\n    setQueryText: (state, action) => {\n      state.queryText = action.payload\n\n      if (state.queryText.length === 0) {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['q', ''],\n        ]))\n      } else {\n        pushReplaceSearchParams(new URLSearchParams([\n          ['q', state.queryText],\n        ]))\n      }\n    },\n    setGeoLocation: (state, action) => {\n      state.latitude = action.payload.latitude\n      state.longitude = action.payload.longitude\n\n      pushReplaceSearchParams(new URLSearchParams([\n        ['lat', state.latitude],\n        ['lon', state.longitude],\n      ]))\n    },\n    clearGeoLocation: (state) => {\n      state.latitude = null\n      state.longitude = null\n\n      pushReplaceSearchParams(new URLSearchParams([\n        ['lat', ''],\n        ['lon', ''],\n      ]))\n    }\n  }\n})\n\nexport const {\n  setTags,\n  setSelectedTags,\n  toggleTag,\n  setQueryText,\n  setGeoLocation,\n  clearGeoLocation,\n} = filterSlice.actions\n\nexport const selectTags = state => state.filter.tags\nexport const selectSelectedTags = state => state.filter.selectedTags.filter(Boolean)\nexport const selectQueryText = state => state.filter.queryText\nexport const selectGeoLocation = state => ({\n  latitude: state.filter.latitude,\n  longitude: state.filter.longitude,\n})\n\nexport default filterSlice.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: {\n    resources: [],\n  },\n  reducers: {\n    setResources: (state, action) => {\n      state.resources = action.payload\n    },\n  }\n})\n\nexport const {\n  setResources,\n} = resourcesSlice.actions\n\nexport const fetchResources = createAsyncThunk('resources/fetchResources', async (value, thunkApi) => {\n  console.log('fetchResources')\n  const {\n    dispatch,\n    getState,\n  } = thunkApi || {}\n\n  const { filter } = getState()\n\n  const {\n    latitude,\n    longitude,\n    selectedTags,\n    queryText,\n  } = filter || {}\n\n  const search_params_data = {}\n\n  if (\n    latitude !== null && String(latitude).length > 0\n    && longitude !== null && String(longitude).length > 0\n  ) {\n    search_params_data.lat = latitude\n    search_params_data.lon = longitude\n  }\n\n  const filtered_selectedTags = selectedTags.filter(Boolean)\n  if (Array.isArray(filtered_selectedTags) && filtered_selectedTags.length > 0) {\n    search_params_data.tags = filtered_selectedTags.join(',')\n  }\n\n  if (typeof queryText === 'string' && queryText.length > 0) {\n    search_params_data.q = queryText\n  }\n\n  const search_params = new URLSearchParams(search_params_data).toString()\n\n  const url = `${window.urls.api}resources.json${search_params.length > 0 ? '?' + search_params : ''}`;\n\n  console.log('url', url)\n\n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log('data', data)\n      dispatch(setResources(data.resources))\n    })\n})\n\nexport const selectResources = state => state.resources.resources\n\nexport default resourcesSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport filterReducer from './slices/filterSlice.js'\nimport resourcesReducer from './slices/resourcesSlice.js'\n\nexport default configureStore({\n  reducer: {\n    filter: filterReducer,\n    resources: resourcesReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { router } from './components/router.js';\nimport {\n  RouterProvider,\n} from 'react-router-dom'\n\nimport { Provider as ReduxProvider } from 'react-redux'\nimport store from './redux/store.js'\n\n// import reportWebVitals from './reportWebVitals';\n\n// check if domain is 0.0.0.0\nconst isLocalhost = Boolean(\n  window.location.hostname === '0.0.0.0' ||\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]'\n)\n\nwindow.env = isLocalhost === true ? 'dev' : 'prod'\nwindow.urls = {\n  frontend: 'https://money.thomasrosen.me/',\n  api: 'https://money.thomasrosen.me/api/',\n}\nif (window.env === 'dev') {\n  const dev_domain = 'localhost' // 0.0.0.0\n  window.urls.frontend = `http://${dev_domain}:3000/`\n  window.urls.api = `http://${dev_domain}:13151/api/`\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <RouterProvider\n        router={router}\n        fallbackElement=\"Loadingâ€¦\"\n      />\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.info))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}